<?xml version="1.0" encoding="UTF-8"?><embeddedOutputs><metaData><evaluationState>manual</evaluationState><layoutState>document</layoutState><outputStatus>ready</outputStatus><splitterState><proportion>0.4</proportion></splitterState></metaData><outputArray type="array"/><regionArray type="array"><element><code><sectionBreak>true</sectionBreak><endOfSection>false</endOfSection><regionString>clear;</regionString><regionNumber>0</regionNumber></code><startLine>13</startLine><endLine>13</endLine><outputIndexes type="array"/></element><element><code><sectionBreak>false</sectionBreak><endOfSection>true</endOfSection><regionString>cleanPath();</regionString><regionNumber>1</regionNumber></code><startLine>13</startLine><endLine>13</endLine><outputIndexes type="array"/></element><element><code><sectionBreak>true</sectionBreak><endOfSection>true</endOfSection><regionString>warmUpExercise()</regionString><regionNumber>2</regionNumber></code><startLine>22</startLine><endLine>22</endLine><outputIndexes type="array"/></element><element><code><sectionBreak>true</sectionBreak><endOfSection>false</endOfSection><regionString>data = load('ex1data1.txt'); % read comma separated data</regionString><regionNumber>3</regionNumber></code><startLine>38</startLine><endLine>38</endLine><outputIndexes type="array"/></element><element><code><sectionBreak>false</sectionBreak><endOfSection>true</endOfSection><regionString>X = data(:, 1); y = data(:, 2);</regionString><regionNumber>4</regionNumber></code><startLine>39</startLine><endLine>39</endLine><outputIndexes type="array"/></element><element><code><sectionBreak>true</sectionBreak><endOfSection>true</endOfSection><regionString>plotData(X,y)</regionString><regionNumber>5</regionNumber></code><startLine>44</startLine><endLine>44</endLine><outputIndexes type="array"/></element><element><code><sectionBreak>true</sectionBreak><endOfSection>false</endOfSection><regionString>m = length(X) % number of training examples</regionString><regionNumber>6</regionNumber></code><startLine>65</startLine><endLine>65</endLine><outputIndexes type="array"/></element><element><code><sectionBreak>false</sectionBreak><endOfSection>false</endOfSection><regionString>X = [ones(m, 1), data(:,1)]; % Add a column of ones to x</regionString><regionNumber>7</regionNumber></code><startLine>66</startLine><endLine>66</endLine><outputIndexes type="array"/></element><element><code><sectionBreak>false</sectionBreak><endOfSection>false</endOfSection><regionString>theta = zeros(2, 1); % initialize fitting parameters</regionString><regionNumber>8</regionNumber></code><startLine>67</startLine><endLine>67</endLine><outputIndexes type="array"/></element><element><code><sectionBreak>false</sectionBreak><endOfSection>false</endOfSection><regionString>iterations = 1500;</regionString><regionNumber>9</regionNumber></code><startLine>68</startLine><endLine>68</endLine><outputIndexes type="array"/></element><element><code><sectionBreak>false</sectionBreak><endOfSection>true</endOfSection><regionString>alpha = 0.01;</regionString><regionNumber>10</regionNumber></code><startLine>69</startLine><endLine>69</endLine><outputIndexes type="array"/></element><element><code><sectionBreak>true</sectionBreak><endOfSection>true</endOfSection><regionString>computeCost(X, y, theta)</regionString><regionNumber>11</regionNumber></code><startLine>76</startLine><endLine>76</endLine><outputIndexes type="array"/></element><element><code><sectionBreak>true</sectionBreak><endOfSection>false</endOfSection><regionString>theta = gradientDescent(X, y, theta, alpha, iterations);</regionString><regionNumber>12</regionNumber></code><startLine>93</startLine><endLine>93</endLine><outputIndexes type="array"/></element><element><code><sectionBreak>false</sectionBreak><endOfSection>false</endOfSection><regionString>fprintf('Theta computed from gradient descent:\n%f,\n%f',theta(1),theta(2))</regionString><regionNumber>13</regionNumber></code><startLine>97</startLine><endLine>97</endLine><outputIndexes type="array"/></element><element><code><sectionBreak>false</sectionBreak><endOfSection>false</endOfSection><regionString>hold on; % keep previous plot visible</regionString><regionNumber>14</regionNumber></code><startLine>100</startLine><endLine>100</endLine><outputIndexes type="array"/></element><element><code><sectionBreak>false</sectionBreak><endOfSection>false</endOfSection><regionString>plot(X(:,2), X*theta, '-')</regionString><regionNumber>15</regionNumber></code><startLine>101</startLine><endLine>101</endLine><outputIndexes type="array"/></element><element><code><sectionBreak>false</sectionBreak><endOfSection>false</endOfSection><regionString>legend('Training data', 'Linear regression')</regionString><regionNumber>16</regionNumber></code><startLine>102</startLine><endLine>102</endLine><outputIndexes type="array"/></element><element><code><sectionBreak>false</sectionBreak><endOfSection>false</endOfSection><regionString>hold off % don't overlay any more plots on this figure</regionString><regionNumber>17</regionNumber></code><startLine>103</startLine><endLine>103</endLine><outputIndexes type="array"/></element><element><code><sectionBreak>false</sectionBreak><endOfSection>false</endOfSection><regionString>predict1 = [1, 3.5] *theta;</regionString><regionNumber>18</regionNumber></code><startLine>106</startLine><endLine>106</endLine><outputIndexes type="array"/></element><element><code><sectionBreak>false</sectionBreak><endOfSection>false</endOfSection><regionString>fprintf('For population = 35,000, we predict a profit of %f\n', predict1*10000);</regionString><regionNumber>19</regionNumber></code><startLine>107</startLine><endLine>107</endLine><outputIndexes type="array"/></element><element><code><sectionBreak>false</sectionBreak><endOfSection>false</endOfSection><regionString>predict2 = [1, 7] * theta;</regionString><regionNumber>20</regionNumber></code><startLine>108</startLine><endLine>108</endLine><outputIndexes type="array"/></element><element><code><sectionBreak>false</sectionBreak><endOfSection>true</endOfSection><regionString>fprintf('For population = 70,000, we predict a profit of %f\n', predict2*10000);</regionString><regionNumber>21</regionNumber></code><startLine>109</startLine><endLine>109</endLine><outputIndexes type="array"/></element><element><code><sectionBreak>true</sectionBreak><endOfSection>false</endOfSection><regionString>theta0_vals = linspace(-10, 10, 100);</regionString><regionNumber>22</regionNumber></code><startLine>123</startLine><endLine>123</endLine><outputIndexes type="array"/></element><element><code><sectionBreak>false</sectionBreak><endOfSection>false</endOfSection><regionString>theta1_vals = linspace(-1, 4, 100);</regionString><regionNumber>23</regionNumber></code><startLine>124</startLine><endLine>124</endLine><outputIndexes type="array"/></element><element><code><sectionBreak>false</sectionBreak><endOfSection>false</endOfSection><regionString>J_vals = zeros(length(theta0_vals), length(theta1_vals));</regionString><regionNumber>24</regionNumber></code><startLine>127</startLine><endLine>127</endLine><outputIndexes type="array"/></element><element><code><sectionBreak>false</sectionBreak><endOfSection>true</endOfSection><regionString>for i = 1:length(theta0_vals)
    for j = 1:length(theta1_vals)
	  t = [theta0_vals(i); theta1_vals(j)];    
	  J_vals(i,j) = computeCost(X, y, t);
    end
end</regionString><regionNumber>25</regionNumber></code><startLine>130</startLine><endLine>135</endLine><outputIndexes type="array"/></element><element><code><sectionBreak>true</sectionBreak><endOfSection>false</endOfSection><regionString>J_vals = J_vals';</regionString><regionNumber>26</regionNumber></code><startLine>141</startLine><endLine>141</endLine><outputIndexes type="array"/></element><element><code><sectionBreak>false</sectionBreak><endOfSection>false</endOfSection><regionString>figure;</regionString><regionNumber>27</regionNumber></code><startLine>144</startLine><endLine>144</endLine><outputIndexes type="array"/></element><element><code><sectionBreak>false</sectionBreak><endOfSection>false</endOfSection><regionString>surf(theta0_vals, theta1_vals, J_vals)</regionString><regionNumber>28</regionNumber></code><startLine>145</startLine><endLine>145</endLine><outputIndexes type="array"/></element><element><code><sectionBreak>false</sectionBreak><endOfSection>false</endOfSection><regionString>xlabel('\theta_0'); ylabel('\theta_1');</regionString><regionNumber>29</regionNumber></code><startLine>146</startLine><endLine>146</endLine><outputIndexes type="array"/></element><element><code><sectionBreak>false</sectionBreak><endOfSection>false</endOfSection><regionString>figure;</regionString><regionNumber>30</regionNumber></code><startLine>149</startLine><endLine>149</endLine><outputIndexes type="array"/></element><element><code><sectionBreak>false</sectionBreak><endOfSection>false</endOfSection><regionString>contour(theta0_vals, theta1_vals, J_vals, logspace(-2, 3, 20))</regionString><regionNumber>31</regionNumber></code><startLine>151</startLine><endLine>151</endLine><outputIndexes type="array"/></element><element><code><sectionBreak>false</sectionBreak><endOfSection>false</endOfSection><regionString>xlabel('\theta_0'); ylabel('\theta_1');</regionString><regionNumber>32</regionNumber></code><startLine>152</startLine><endLine>152</endLine><outputIndexes type="array"/></element><element><code><sectionBreak>false</sectionBreak><endOfSection>false</endOfSection><regionString>hold on;</regionString><regionNumber>33</regionNumber></code><startLine>153</startLine><endLine>153</endLine><outputIndexes type="array"/></element><element><code><sectionBreak>false</sectionBreak><endOfSection>true</endOfSection><regionString>plot(theta(1), theta(2), 'rx', 'MarkerSize', 10, 'LineWidth', 2);</regionString><regionNumber>34</regionNumber></code><startLine>154</startLine><endLine>154</endLine><outputIndexes type="array"/></element><element><code><sectionBreak>true</sectionBreak><endOfSection>false</endOfSection><regionString>data = load('ex1data2.txt');</regionString><regionNumber>35</regionNumber></code><startLine>165</startLine><endLine>165</endLine><outputIndexes type="array"/></element><element><code><sectionBreak>false</sectionBreak><endOfSection>false</endOfSection><regionString>X = data(:, 1:2);</regionString><regionNumber>36</regionNumber></code><startLine>166</startLine><endLine>166</endLine><outputIndexes type="array"/></element><element><code><sectionBreak>false</sectionBreak><endOfSection>false</endOfSection><regionString>y = data(:, 3);</regionString><regionNumber>37</regionNumber></code><startLine>167</startLine><endLine>167</endLine><outputIndexes type="array"/></element><element><code><sectionBreak>false</sectionBreak><endOfSection>false</endOfSection><regionString>m = length(y);</regionString><regionNumber>38</regionNumber></code><startLine>168</startLine><endLine>168</endLine><outputIndexes type="array"/></element><element><code><sectionBreak>false</sectionBreak><endOfSection>true</endOfSection><regionString>fprintf(' x = [%.0f %.0f], y = %.0f \n', [X(1:10,:) y(1:10,:)]');</regionString><regionNumber>39</regionNumber></code><startLine>172</startLine><endLine>172</endLine><outputIndexes type="array"/></element><element><code><sectionBreak>true</sectionBreak><endOfSection>false</endOfSection><regionString>[X, mu, sigma] = featureNormalize(X);</regionString><regionNumber>40</regionNumber></code><startLine>182</startLine><endLine>182</endLine><outputIndexes type="array"/></element><element><code><sectionBreak>false</sectionBreak><endOfSection>true</endOfSection><regionString>X = [ones(m, 1) X];</regionString><regionNumber>41</regionNumber></code><startLine>188</startLine><endLine>188</endLine><outputIndexes type="array"/></element><element><code><sectionBreak>true</sectionBreak><endOfSection>false</endOfSection><regionString>alpha = 0.1;</regionString><regionNumber>42</regionNumber></code><startLine>202</startLine><endLine>202</endLine><outputIndexes type="array"/></element><element><code><sectionBreak>false</sectionBreak><endOfSection>false</endOfSection><regionString>num_iters = 400;</regionString><regionNumber>43</regionNumber></code><startLine>203</startLine><endLine>203</endLine><outputIndexes type="array"/></element><element><code><sectionBreak>false</sectionBreak><endOfSection>false</endOfSection><regionString>theta = zeros(3, 1);</regionString><regionNumber>44</regionNumber></code><startLine>206</startLine><endLine>206</endLine><outputIndexes type="array"/></element><element><code><sectionBreak>false</sectionBreak><endOfSection>false</endOfSection><regionString>[theta, ~] = gradientDescentMulti(X, y, theta, alpha, num_iters);</regionString><regionNumber>45</regionNumber></code><startLine>207</startLine><endLine>207</endLine><outputIndexes type="array"/></element><element><code><sectionBreak>false</sectionBreak><endOfSection>true</endOfSection><regionString>fprintf('Theta computed from gradient descent:\n%f,\n%f',theta(1),theta(2))</regionString><regionNumber>46</regionNumber></code><startLine>210</startLine><endLine>210</endLine><outputIndexes type="array"/></element><element><code><sectionBreak>true</sectionBreak><endOfSection>false</endOfSection><regionString>price = []; % Enter your price formula here</regionString><regionNumber>47</regionNumber></code><startLine>217</startLine><endLine>217</endLine><outputIndexes type="array"/></element><element><code><sectionBreak>false</sectionBreak><endOfSection>true</endOfSection><regionString>fprintf('Predicted price of a 1650 sq-ft, 3 br house (using gradient descent):\n $%f', price);</regionString><regionNumber>48</regionNumber></code><startLine>221</startLine><endLine>221</endLine><outputIndexes type="array"/></element><element><code><sectionBreak>true</sectionBreak><endOfSection>false</endOfSection><regionString>alpha = 1;</regionString><regionNumber>49</regionNumber></code><startLine>234</startLine><endLine>234</endLine><outputIndexes type="array"/></element><element><code><sectionBreak>false</sectionBreak><endOfSection>false</endOfSection><regionString>num_iters = 50;</regionString><regionNumber>50</regionNumber></code><startLine>235</startLine><endLine>235</endLine><outputIndexes type="array"/></element><element><code><sectionBreak>false</sectionBreak><endOfSection>false</endOfSection><regionString>theta = zeros(3, 1);</regionString><regionNumber>51</regionNumber></code><startLine>238</startLine><endLine>238</endLine><outputIndexes type="array"/></element><element><code><sectionBreak>false</sectionBreak><endOfSection>false</endOfSection><regionString>[~, J_history] = gradientDescentMulti(X, y, theta, alpha, num_iters);</regionString><regionNumber>52</regionNumber></code><startLine>239</startLine><endLine>239</endLine><outputIndexes type="array"/></element><element><code><sectionBreak>false</sectionBreak><endOfSection>false</endOfSection><regionString>plot(1:num_iters, J_history, '-b', 'LineWidth', 2);</regionString><regionNumber>53</regionNumber></code><startLine>242</startLine><endLine>242</endLine><outputIndexes type="array"/></element><element><code><sectionBreak>false</sectionBreak><endOfSection>false</endOfSection><regionString>xlabel('Number of iterations');</regionString><regionNumber>54</regionNumber></code><startLine>243</startLine><endLine>243</endLine><outputIndexes type="array"/></element><element><code><sectionBreak>false</sectionBreak><endOfSection>true</endOfSection><regionString>ylabel('Cost J');</regionString><regionNumber>55</regionNumber></code><startLine>244</startLine><endLine>244</endLine><outputIndexes type="array"/></element><element><code><sectionBreak>true</sectionBreak><endOfSection>false</endOfSection><regionString>alpha = 0.1;</regionString><regionNumber>56</regionNumber></code><startLine>250</startLine><endLine>250</endLine><outputIndexes type="array"/></element><element><code><sectionBreak>false</sectionBreak><endOfSection>false</endOfSection><regionString>num_iters = 400;</regionString><regionNumber>57</regionNumber></code><startLine>251</startLine><endLine>251</endLine><outputIndexes type="array"/></element><element><code><sectionBreak>false</sectionBreak><endOfSection>false</endOfSection><regionString>theta = zeros(3, 1);</regionString><regionNumber>58</regionNumber></code><startLine>254</startLine><endLine>254</endLine><outputIndexes type="array"/></element><element><code><sectionBreak>false</sectionBreak><endOfSection>false</endOfSection><regionString>[theta, ~] = gradientDescentMulti(X, y, theta, alpha, num_iters);</regionString><regionNumber>59</regionNumber></code><startLine>255</startLine><endLine>255</endLine><outputIndexes type="array"/></element><element><code><sectionBreak>false</sectionBreak><endOfSection>false</endOfSection><regionString>fprintf('Theta computed from gradient descent:\n%f\n%f',theta(1),theta(2))</regionString><regionNumber>60</regionNumber></code><startLine>258</startLine><endLine>258</endLine><outputIndexes type="array"/></element><element><code><sectionBreak>false</sectionBreak><endOfSection>false</endOfSection><regionString>price = []; % Enter your price formula here</regionString><regionNumber>61</regionNumber></code><startLine>264</startLine><endLine>264</endLine><outputIndexes type="array"/></element><element><code><sectionBreak>false</sectionBreak><endOfSection>true</endOfSection><regionString>fprintf('Predicted price of a 1650 sq-ft, 3 br house (using gradient descent):\n $%f', price);</regionString><regionNumber>62</regionNumber></code><startLine>268</startLine><endLine>268</endLine><outputIndexes type="array"/></element><element><code><sectionBreak>true</sectionBreak><endOfSection>false</endOfSection><regionString>data = csvread('ex1data2.txt');</regionString><regionNumber>63</regionNumber></code><startLine>278</startLine><endLine>278</endLine><outputIndexes type="array"/></element><element><code><sectionBreak>false</sectionBreak><endOfSection>false</endOfSection><regionString>X = data(:, 1:2);</regionString><regionNumber>64</regionNumber></code><startLine>279</startLine><endLine>279</endLine><outputIndexes type="array"/></element><element><code><sectionBreak>false</sectionBreak><endOfSection>false</endOfSection><regionString>y = data(:, 3);</regionString><regionNumber>65</regionNumber></code><startLine>280</startLine><endLine>280</endLine><outputIndexes type="array"/></element><element><code><sectionBreak>false</sectionBreak><endOfSection>false</endOfSection><regionString>m = length(y);</regionString><regionNumber>66</regionNumber></code><startLine>281</startLine><endLine>281</endLine><outputIndexes type="array"/></element><element><code><sectionBreak>false</sectionBreak><endOfSection>false</endOfSection><regionString>X = [ones(m, 1) X];</regionString><regionNumber>67</regionNumber></code><startLine>284</startLine><endLine>284</endLine><outputIndexes type="array"/></element><element><code><sectionBreak>false</sectionBreak><endOfSection>false</endOfSection><regionString>theta = normalEqn(X, y);</regionString><regionNumber>68</regionNumber></code><startLine>287</startLine><endLine>287</endLine><outputIndexes type="array"/></element><element><code><sectionBreak>false</sectionBreak><endOfSection>true</endOfSection><regionString>fprintf('Theta computed from the normal equations:\n%f\n%f', theta(1),theta(2));</regionString><regionNumber>69</regionNumber></code><startLine>290</startLine><endLine>290</endLine><outputIndexes type="array"/></element><element><code><sectionBreak>true</sectionBreak><endOfSection>false</endOfSection><regionString>price = []; % Enter your price forumla here</regionString><regionNumber>70</regionNumber></code><startLine>296</startLine><endLine>296</endLine><outputIndexes type="array"/></element><element><code><sectionBreak>false</sectionBreak><endOfSection>true</endOfSection><regionString>fprintf('Predicted price of a 1650 sq-ft, 3 br house (using normal equations):\n $%f', price);     </regionString><regionNumber>71</regionNumber></code><startLine>300</startLine><endLine>300</endLine><outputIndexes type="array"/></element><element><code><sectionBreak>true</sectionBreak><endOfSection>false</endOfSection><regionString>function [] = cleanPath() </regionString><regionNumber>72</regionNumber></code><startLine>305</startLine><endLine>305</endLine><outputIndexes type="array"/></element><element><code><sectionBreak>false</sectionBreak><endOfSection>false</endOfSection><regionString>    pth = strsplit(path,pathsep); % Obtain the search path </regionString><regionNumber>73</regionNumber></code><startLine>305</startLine><endLine>305</endLine><outputIndexes type="array"/></element><element><code><sectionBreak>false</sectionBreak><endOfSection>false</endOfSection><regionString>    pth = ([pth{contains(pth,'machine-learning-ex')},{''}]); % Obtain any ML exercise folders that have been added to the path</regionString><regionNumber>74</regionNumber></code><startLine>305</startLine><endLine>305</endLine><outputIndexes type="array"/></element><element><code><sectionBreak>false</sectionBreak><endOfSection>false</endOfSection><regionString>    rmpath(pth{:}); % Remove these folders from the path</regionString><regionNumber>75</regionNumber></code><startLine>305</startLine><endLine>305</endLine><outputIndexes type="array"/></element><element><code><sectionBreak>false</sectionBreak><endOfSection>false</endOfSection><regionString>    pwd</regionString><regionNumber>76</regionNumber></code><startLine>305</startLine><endLine>305</endLine><outputIndexes type="array"/></element><element><code><sectionBreak>false</sectionBreak><endOfSection>false</endOfSection><regionString>    dir</regionString><regionNumber>77</regionNumber></code><startLine>305</startLine><endLine>305</endLine><outputIndexes type="array"/></element><element><code><sectionBreak>false</sectionBreak><endOfSection>true</endOfSection><regionString>end</regionString><regionNumber>78</regionNumber></code><startLine>305</startLine><endLine>305</endLine><outputIndexes type="array"/></element></regionArray></embeddedOutputs>